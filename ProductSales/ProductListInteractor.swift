//
//  ProductListInteractor.swift
//  ProductSales
//
//  Created by Yeşim Daşdemir on 23.02.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

protocol ProductListBusinessLogic {
    func getProductList(pageNo: Int)
}

protocol ProductListDataStore {
    
}

final class ProductListInteractor: ProductListBusinessLogic, ProductListDataStore {
    var presenter: ProductListPresentationLogic?
    var listRequest: ProductListRequest!
    let network = NetworkManager()
    
    func getProductList(pageNo: Int) {
        listRequest = ProductListRequest()
        
        let parameterDict: [String: String] = [
            "query": "apple",
            "page": "\(pageNo)"
        ]
        
        for i in parameterDict {
            listRequest.parameterQuery.append(URLQueryItem(name: i.key, value: i.value))
        }
        
        LoadingViewController.shared.showLoading()
        
        network.request(from: listRequest) { [weak self] result in
            LoadingViewController.shared.hideLoading()
            
            switch result {
                case .success(let products):
                    guard let products = products as? ProductSales.GetProductList.Response else {
                      return
                    }
                    self?.presenter?.presentProductList(response: products)
                    
                case .failure(let error):
                    AlertUtils.shared.showAlert(title: "Error", message: error.localizedDescription)
                    debugPrint(error)
            }
        }
    }
}
